<% query_options = nil unless defined?(query_options) %>
<% query_options ||= {} %>

<%= form_tag({}, :data => {:cm_url => issues_context_menu_path}) do -%>
  <%= hidden_field_tag 'back_url', url_for(:params => request.query_parameters), :id => nil %>
  <%= query_columns_hidden_tags(query) %>
  <div class="autoscroll">
    <table class="list issues odd-even <%= query.css_classes %>">
      <thead>
      <tr>
        <th class="checkbox hide-when-print">
          <%= check_box_tag 'check_all', '', false, :class => 'toggle-selection',
                            :title => "#{l(:button_check_all)}/#{l(:button_uncheck_all)}" %>
        </th>
        <% query.inline_columns.each do |column| %>
          <%= column_header(query, column, query_options) %>
        <% end %>
        <th class="buttons"></th>
      </tr>
      </thead>
      <tbody>
      <%
        issue_ids_included = Set.new
        issues_grouped = query.group_by_column ? issues.group_by { |issue| query.group_by_column.value(issue) } : { nil => issues }

        issues_grouped.each do |group, grouped_issues|
          if group.present?
            # Render the group header
            group_name = format_object(group)
            reset_cycle
      %>
          <tr class="group open">
            <td colspan="<%= query.inline_columns.size + 2 %>">
              <span class="expander icon icon-expended" onclick="toggleRowGroup(this);">&nbsp;</span>
              <span class="name"><%= group_name %></span> <span class="badge badge-count count"><%= grouped_issues.size %></span>
            </td>
          </tr>
        <%
          end

          grouped_issues.each do |issue|
            next if issue_ids_included.include?(issue.id)
            issue_ids_included.add(issue.id)

            is_parent = issue.children.any?
            style = is_parent ? 'font-weight: bold;' : ''

            # Render the issue
        %>
          <tr id="issue-<%= issue.id %>" class="issue hascontextmenu <%= cycle('odd', 'even') %> <%= issue.css_classes %>" style="<%= style %>">
            <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", issue.id, false, :id => nil) %></td>
            <% query.inline_columns.each do |column| %>
              <%= content_tag('td', column_content(column, issue), :class => column.css_classes) %>
            <% end %>
            <td class="buttons"><%= link_to_context_menu %></td>
          </tr>
          <%
            # Render child issues if any
            if is_parent
              issue.children.each do |child|
                next if issue_ids_included.include?(child.id)
                issue_ids_included.add(child.id)
          %>
              <tr id="issue-<%= child.id %>" class="issue hascontextmenu <%= cycle('odd', 'even') %> <%= child.css_classes %> idnt idnt-1">
                <td class="checkbox hide-when-print"><%= check_box_tag("ids[]", child.id, false, :id => nil) %></td>
                <% query.inline_columns.each do |column| %>
                  <%= content_tag('td', column_content(column, child), :class => column.css_classes) %>
                <% end %>
                <td class="buttons"><%= link_to_context_menu %></td>
              </tr>
            <%
              end
              end
              end
              end
            %>
      </tbody>
    </table>
  </div>
<% end -%>
